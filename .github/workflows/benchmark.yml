name: Benchmark PR

on:
  pull_request:
    branches:
      - main

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Julia
        uses: julia-actions/setup-julia@v1

      - name: Install dependencies
        run: |
          julia -e 'using Pkg; Pkg.add("BenchmarkTools"); Pkg.add("JSON")'

      - name: Run benchmarks
        run: |
          julia -e 'using BenchmarkTools; include("scripts/benchmark.jl")'

      - name: Commit leaderboard update
        run: |
        
          # Get the PR number from the GitHub context
          PR_NUMBER=$(jq -r '.pull_request.number' "$GITHUB_EVENT_PATH")
      
          # Get the benchmark result from the JSON file
          EXECUTION_TIME=$(jq -r '.benchmark_results[0].time' results.json)
      
          # Append the benchmark result to the leaderboard.md
          echo "| PR #$PR_NUMBER | $EXECUTION_TIME |" >> leaderboard.md
      
          # Commit the updated leaderboard.md if it was modified
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add leaderboard.md
          git diff --exit-code leaderboard.md || git commit -m "Update leaderboard with PR #$PR_NUMBER benchmark"
          
          # Stash any uncommitted changes
          git stash --include-untracked
          
          # Pull the latest changes from the remote branch
          git pull --rebase origin $(jq -r '.pull_request.head.ref' "$GITHUB_EVENT_PATH")
          
          # Apply the stashed changes
          git stash pop
          
          # Push the changes to the current branch
          git push origin HEAD:$(jq -r '.pull_request.head.ref' "$GITHUB_EVENT_PATH")
      
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}